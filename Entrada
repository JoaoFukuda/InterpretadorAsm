import java.util.Scanner;
import java.util.jar.Pack200;

public class Entrada{
    

    static String seeInsideAddress(String shell){
        char [] casca = shell.toCharArray();
        String semCasca="";
        for (int i=1; i<casca.length -1;i++){
            semCasca +=casca[i];
        }
        return semCasca;
    }

    static String traduzIssu(String op , String p1, String p2){
   /*
   p1 pode ser registrador ou endereco. Aparentemente p1 nunca serah uma constante, putz, tem o compare, lembrei disso enquanto coloco no git. vejo isso depois
   p2 pode ser constante, registrador ou endereco
   */
                
boolean endereco= true; // eu poderia assumir que endereco eh registrador= false; mas acho que assim fica menos confuso
boolean registrador= false;
String a= "AX";       
       if (p1.equals(a)){
           registrador = true;
           endereco=false;
       }
       String b= "BX";       
       if (p1.equals(b)){
           registrador = true;
           endereco=false;
       }
       String c= "CX";       
       if (p1.equals(c)){
           registrador = true;
           endereco=false;
       }
       String d= "DX";       
       if (p1.equals(d)){
           registrador = true;
           endereco=false;
       }
/*__________________________________________________________________ */
// aqui verifica se eh constante
boolean ehConstante2= true;
       try{
        int foi2 = Integer.parseInt(p2);			
        System.out.println(foi2);
       }
       catch(NumberFormatException foi2){
            ehConstante2=false;
       }
       
/*________________________________________________________________ */

boolean registrador2= false;
boolean endereco2= true;
    
       if (p2.equals(a)){
           registrador2 = true;
           endereco2= false;
       }
       
       if (p2.equals(b)){
           registrador2 = true;
           endereco2= false;
       }
    
       if (p2.equals(c)){
           registrador2 = true;
           endereco2= false;
       }
           
       if (p2.equals(d)){
           registrador2 = true;
           endereco2= false;
       }
/* ______________________________________________________________________________________*/

       String opCode="";
      String m="MOV";
       if (op.equals(m)){
           
           if (registrador && registrador2){ // MOV R1,R2
                opCode= "011010";
           }
           if (registrador && ehConstante2){ //MOV R1, const
            opCode= "000000";
           }
           if(endereco && registrador2){ // MOV [R1], R2   opCode= "000001"; // MOV [const], R1  opCode="000100";
               System.out.println("dentro do parametro1:"+seeInsideAddress(p1)); 
           }
           if(endereco && ehConstante2){ // MOV [R1],constante opCode="000010";  //MOV [constante],constante opCode="000011";

           }
           
           if (registrador && endereco2){ // MOV R1, [const]   opCode="000101";     //MOV R1,[R2]  opCode="000110";
               
           }
           
           
       }
          
         return opCode;
       }
    
    static void separaIssu(String c){
        char [] comando = c.toCharArray();
        String operacao="";
        String p1="";
        String p2="";
        
         for (int op=0;op<3;op++){ /* nesse for op pega 3 chars, esqueci do je, jl... que têm 2 chars,
             nesse caso, teria muito problema guardar um espaço no final*/
            operacao+=comando[op]; 
         }
         System.out.println("Operacao:"+operacao);
        int i=4;
        while (comando[i]!=','){
            p1+=comando[i];
            i++;
         }
         for (int y= i+1; y<comando.length;y++){
            p2+=comando[y];
         }
         
         System.out.println("parametro1:"+ p1);
         System.out.println("parametro2:"+p2);
         System.out.println(traduzIssu(operacao,p1,p2));

    }
    
    public static void main(String [] args){
        
        Scanner sc = new Scanner(System.in);
        Scanner i = new Scanner(System.in);
        System.out.print("Quantas linhas tem o código?");
        int it= i.nextInt();
        System.out.print("Digite o codigo:");
        for (int j=0;j < it ;j++){
            String x= sc.nextLine(); 
          separaIssu(x);
          // acho que aqui poderiamos chamar a memoria e já guardar as constantes e endereços nela. também acho que o IR pode pegar o opconde de uma vez 
        }
        sc.close();
        i.close();
    }
}
